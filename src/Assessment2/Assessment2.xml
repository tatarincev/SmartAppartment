<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Assessment2</name>
    </assembly>
    <members>
        <member name="M:Assessment2.Models.ArrayExtensions.IsNullOrEmpty(System.Array)">
            <summary>Indicates whether the specified array is null or has a length of zero.</summary>
            <param name="array">The array to test.</param>
            <returns>true if the array parameter is null or has a length of zero; otherwise, false.</returns>
        </member>
        <member name="T:Assessment2.Models.AuthOptions">
            <summary>
            Represents all the options you can use to configure OAuth authorization flows.
            </summary> 
        </member>
        <member name="P:Assessment2.Models.AuthOptions.Domain">
            <summary>
            Authority (url to authorization server)
            </summary>
        </member>
        <member name="P:Assessment2.Models.AuthOptions.ApiIdentifier">
            <summary>
             Audience refers to the Resource Servers that should accept the token
            </summary>
        </member>
        <member name="P:Assessment2.Models.IndexedSearchQuery.Phrase">
            <summary>
            Search phrase
            </summary>
        </member>
        <member name="P:Assessment2.Models.IndexedSearchQuery.DocType">
            <summary>
            Represents a type of document in search index, supported values: company || property
            </summary>
        </member>
        <member name="P:Assessment2.Models.Index.IndexDocument.DocType">
            <summary>
            Represents a type of document in search index, supported values: company || property
            </summary>
        </member>
        <member name="T:Assessment2.Models.IPagedDataSource`1">
            <summary>
            Interface for implementing a data source iterator
            </summary>
        </member>
        <member name="P:Assessment2.Models.IPagedDataSource`1.CurrentPageNumber">
            <summary>
            The number of the page that will returned by <see cref = "!:Fetch" />
            </summary>
        </member>
        <member name="P:Assessment2.Models.IPagedDataSource`1.PageSize">
            <summary>
            The number of records in the page
            </summary>
        </member>
        <member name="M:Assessment2.Models.IPagedDataSource`1.FetchNextPage">
            <summary>
            Gets the data page from the source according to currently set <see cref = "P:Assessment2.Models.IPagedDataSource`1.CurrentPageNumber" /> and <see cref = "P:Assessment2.Models.IPagedDataSource`1.PageSize" />.
            Implementations should increment <see cref="P:Assessment2.Models.IPagedDataSource`1.CurrentPageNumber"/> after fetch.
            </summary>
            <returns>Is some data received</returns>
        </member>
        <member name="T:Assessment2.Models.MappingProfile">
            <summary>
            represents automapper mapping profile 
            </summary>
        </member>
    </members>
</doc>
